
const textconstants = Dict(
    # Dimensionless
    :coupling => "gravity coupling",
    :finestructure => "fine structure",
    :electronunit => "electron unit ratio",
    :protonunit => "proton unit ratio",
    :protonelectron => "proton-electron ratio",
    :darkenergydensity => "dark energy density",
    #Constants
    :lightspeed => "light speed",
    :planck => "Planck",
    :planckreduced => "Planck reduced",
    :electronmass => "electron mass",
    :molarmass => "molar mass",
    :boltzmann => "Boltzmann",
    :vacuumpermeability => "vacuum permeability",
    :rationalization => "rationalization",
    :lorentz => "Lorentz",
    :luminousefficacy => "luminous efficacy",
    :gravity => "gravity",
    :radian => "radian",
    #Physics
    :turn => "turn",
    :spat => "spat",
    :dalton => "Dalton",
    :protonmass => "proton mass",
    :planckmass => "Planck mass",
    :gravitation => "Newton gravitation",
    :gaussgravitation => "Gauss gravitation",
    :einstein => "Einstein gravitation",
    :hartree => "Hartree",
    :rydberg => "Rydberg",
    :bohr => "Bohr radius",
    :electronradius => "electron radius",
    :avogadro => "Avogadro",
    :molargas => "Molar gas",
    :stefan => "Stefan-Boltzmann",
    :radiationdensity => "radiation density",
    :vacuumpermittivity => "vacuum permittivity",
    :electrostatic => "electrostatic",
    :magnetostatic => "magnetostatic",
    :biotsavart => "Biot-Savart",
    :elementarycharge => "elementary charge",
    :faraday => "Faraday",
    :vacuumimpedance => "vacuum impedance",
    :conductancequantum => "conductance quantum",
    :klitzing => "Klitzing",
    :josephson => "Josephson",
    :magneticfluxquantum => "magnetic flux quantum",
    :magneton => "magneton",
    :hyperfine => "hyperfine transition",
    #other
    :loschmidt => "Loschmidt",
    :wienwavelength => "Wien wavelength",
    :wienfrequency => "Wien frequency",
    :sackurtetrode => "Sackur-Tetrode",
    :mechanicalheat => "mechanical heat",
    :calorie => "calorie",
    :thermalunit => "thermal unit",
    :eddington => "Eddington",
    :solarmass => "solar mass",
    :jupitermass => "Jupiter mass",
    :earthmass => "Earth mass",
    :lunarmass => "lunar mass",
    :gforce => "g-force",
    :earthradius => "Earth radius",
    :greatcircle => "great circle",
    :nauticalmile => "nautical mile",
    :hubble => "Hubble",
    :cosmological => "cosmological")

const textderived = Dict(
    :hyperfine => "hyperfine transition",
    :loschmidt => "loschmidt",
    :wienwavelength => "Wien wavelength",
    :wienfrequency => "Wien frequency",
    :mechanicalheat => "mechanical heat",
    :eddington => "Eddington",
    :solarmass => "solar mass",
    :jupitermass => "Jupiter mass",
    :earthmass => "Earth mass",
    :lunarmass => "lunar mass",
    :earthradius => "Earth radius",
    :greatcircle => "great circle",
    :radarmile => "radar mile",
    :hubble => "Hubble",
    :cosmological => "cosmological",
    :turn => "turn",
    :spat => "spat",
    :radian => "radian",
    :steradian => "steradian",
    :spatian => "spatian",
    :degree => "degree",
    :squaredegree => "square degree",
    :gradian => "gradian",
    :bradian => "bradian",
    :arcminute => "arc minute",
    :arcsecond => "arc second",
    :second => "second",
    :minute => "minute",
    :hour => "hour",
    :day => "day",
    :gaussianmonth => "Gaussian month",
    :siderealmonth => "sidereal month",
    :synodicmonth => "synodic month",
    :year => "year",
    :gaussianyear => "Gaussian year",
    :siderealyear => "sidereal year",
    :jovianyear => "Jovian year",
    :angstrom => "angstrom",
    :inch => "inch",
    :foot => "foot",
    :surveyfoot => "survey foot",
    :yard => "yard",
    :meter => "meter",
    :earthmeter => "Earth meter",
    :mile => "mile",
    :statutemile => "statute mile",
    :meridianmile => "meridian mile",
    :admiraltymile => "admiralty mile",
    :nauticalmile => "nautical mile",
    :lunardistance => "lunar distance",
    :astronomicalunit => "astronomical unit",
    :jupiterdistance => "Jupiter distance",
    :lightyear => "light-year",
    :parsec => "parsec",
    :barn => "barn",
    :hectare => "hectare",
    :acre => "acre",
    :surveyacre => "survey acre",
    :liter => "liter",
    :gallon => "gallon",
    :quart => "quart",
    :pint => "pint",
    :cup => "cup",
    :fluidounce => "fluid ounce",
    :teaspoon => "teaspoon",
    :tablespoon => "tablespoon",
    :bubnoff => "Bubnoff",
    :ips => "inches per second",
    :fps => "feet per second",
    :fpm => "feet per minute",
    :ms => "meters per second",
    :kmh => "kilometers per hour",
    :mph => "miles per hour",
    :knot => "knot",
    :mps => "miles per second",
    :grain => "grain",
    :gram => "gram",
    :earthgram => "Earth gram",
    :kilogram => "kilogram",
    :tonne => "tonne",
    :ton => "ton",
    :pound => "pound (mass)",
    :ounce => "ounce",
    :slug => "slug",
    :slinch => "slinch",
    :hyl => "hyl",
    :dyne => "dyne",
    :newton => "newton",
    :poundal => "poundal",
    :poundforce => "pound (force)",
    :kilopond => "kilopond",
    :psi => "pounds per square inch",
    :pascal => "pascal",
    :bar => "bar",
    :barye => "barye",
    :technicalatmosphere => "technical atmosphere",
    :atmosphere => "atmosphere",
    :inchmercury => "inch mercury",
    :torr => "torr",
    :electronvolt => "electronvolt",
    :erg => "erg",
    :joule => "joule",
    :footpound => "foot-pound",
    :calorie => "calorie",
    :kilocalorie => "kilocalorie",
    :meancalorie => "mean calorie",
    :earthcalorie => "Earth calorie",
    :thermalunit => "British thermal unit",
    :gasgallon => "gas gallon",
    :tontnt => "ton TNT",
    :watt => "watt",
    :horsepower => "horsepower",
    :horsepowerwatt => "horsepower (Watt)",
    :horsepowermetric => "horsepower (Metric)",
    :electricalhorsepower => "electrical horsepower",
    :tonsrefrigeration => "tons refrigeration",
    :boilerhorsepower => "boiler horsepower",
    :coulomb => "coulomb",
    :earthcoulomb => "Earth coulomb",
    :ampere => "ampere",
    :volt => "volt",
    :henry => "henry",
    :ohm => "ohm",
    :siemens => "siemens",
    :farad => "farad",
    :weber => "weber",
    :tesla => "tesla",
    :abcoulomb => "abcoulomb",
    :abampere => "abampere",
    :abvolt => "abvolt",
    :abhenry => "abhenry",
    :abohm => "abohm",
    :abmho => "abmho",
    :abfarad => "abfarad",
    :maxwell => "maxwell",
    :gauss => "gauss",
    :oersted => "oersted",
    :gilbert => "gilbert",
    :statcoulomb => "statcoulomb",
    :statampere => "statampere",
    :statvolt => "statvolt",
    :stathenry => "stathenry",
    :statohm => "statohm",
    :statmho => "statmho",
    :statfarad => "statfarad",
    :statweber => "statfarad",
    :stattesla => "stattesla",
    :kelvin => "Kelvin",
    :rankine => "Rankine",
    :celsius => "Celsius",
    :fahrenheit => "Fahrenheit",
    :sealevel => "sea level",
    :boiling => "boiling",
    :mole => "mole",
    :earthmole => "Earth-mole",
    :poundmole => "pound-mole",
    :slugmole => "slug-mole",
    :slinchmole => "slinch-mole",
    :katal => "katal",
    :amagat => "amagat",
    :lumen => "lumen",
    :candela => "candela",
    :lux => "lux",
    :phot => "phot",
    :footcandle => "foot-candle",
    :nit => "nit",
    :apostilb => "abostilb",
    :stilb => "stilb",
    :lambert => "lambert",
    :footlambert => "foot-lambert",
    :bril => "bril",
    :talbot => "talbot",
    :lumerg => "lumerg",
    :neper => "neper",
    :bel => "bel",
    :decibel => "decibel",
    :hertz => "hertz",
    :apm => "actions per minute",
    :rpm => "revolutions per minute",
    :kayser => "kayser",
    :diopter => "diopter",
    :rayleigh => "rayleigh",
    :flick => "flick",
    :gforce => "g-force",
    :galileo => "galileo",
    :eotvos => "eotvos",
    :darcy => "darcy",
    :poise => "poise",
    :reyn => "reyn",
    :stokes => "stokes",
    :rayl => "rayl",
    :mpge => "mpg equivalent",
    :langley => "langley",
    :jansky => "jansky",
    :solarflux => "solar flux",
    :curie => "curie",
    :gray => "gray",
    :roentgen => "roentgen",
    :rem => "roentgen equivalent man")

const textquantities = Dict(
    :dimensionless => "dimensionless",
    # Kinematic
    :angle => "angle",
    :solidangle => "solid angle",
    :time => "time",
    :angulartime => "angular time",
    :length => "length",
    :angularlength => "angular length",
    :area => "area",
    :angulararea => "angular area",
    :volume => "volume",
    :wavenumber => "wavenumber",
    :angularwavenumber => "angular wavenumber",
    :fuelefficiency => "fuel efficiency",
    :numberdensity => "number density",
    :frequency => "frequency",
    :angularfrequency => "angular frequency",
    :frequencydrift => "frequency drift",
    :stagnance => "stagnance",
    :speed => "speed",
    :acceleration => "acceleration",
    :jerk => "jerk",
    :snap => "snap",
    :crackle => "crackle",
    :pop => "pop",
    :volumeflow => "volume flow",
    :etendue => "etendue",
    :photonintensity => "photon intensity",
    :photonirradiance => "photon irradiance",
    :photonradiance => "photon radiance",
    # Mechanical
    :inertia => "inertia",
    :mass => "mass",
    :massflow => "mass flow",
    :lineardensity => "linear density",
    :areadensity => "area density",
    :density => "density",
    :specificweight => "specific weight",
    :specificvolume => "specific volume",
    :force => "force",
    :specificforce => "specific force",
    :gravityforce => "gravity force",
    :pressure => "pressure",
    :compressibility => "compressibility",
    :viscosity => "viscosity",
    :diffusivity => "diffusivity",
    :rotationalinertia => "rotational inertia",
    :impulse => "impulse",
    :momentum => "momentum",
    :angularmomentum => "angular momentum",
    :yank => "yank",
    :energy => "energy",
    :specificenergy => "specific energy",
    :action => "action",
    :fluence => "fluence",
    :power => "power",
    :powerdensity => "power density",
    :irradiance => "irradiance",
    :radiance => "radiance",
    :radiantintensity => "radiant intensity",
    :spectralflux => "spectral flux",
    :spectralexposure => "spectral exposure",
    :soundexposure => "sound exposure",
    :impedance => "impedance",
    :specificimpedance => "specific impedance",
    :admittance => "admittance",
    :compliance => "compliance",
    :inertance => "inertance",
    # Electromagnetic
    :charge => "charge",
    :chargedensity => "charge density",
    :linearchargedensity => "linear charge density",
    :exposure => "exposure",
    :mobility => "mobility",
    :current => "current",
    :currentdensity => "current density",
    :resistance => "resistance",
    :conductance => "conductance",
    :resistivity => "resistivity",
    :conductivity => "conductivity",
    :capacitance => "capacitance",
    :inductance => "inductance",
    :reluctance => "reluctance",
    :permeance => "permeance",
    :permittivity => "permittivity",
    :permeability => "permeability",
    :susceptibility => "susceptibility",
    :specificsusceptibility => "specific susceptibility",
    :demagnetizingfactor => "demagnetizing factor",
    :vectorpotential => "vector potential",
    :electricpotential => "electric potential",
    :magneticpotential => "magnetic potential",
    :electricfield => "electric field",
    :magneticfield => "magnetic field",
    :electricflux => "electric flux",
    :magneticflux => "magnetic flux",
    :electricdisplacement => "electric displacement",
    :magneticfluxdensity => "magnetic flux density",
    :electricdipolemoment => "electric dipole moment",
    :magneticdipolemoment => "magnetic dipole moment",
    :electricpolarizability => "electric polarizability",
    :magneticpolarizability => "magnetic polarizability",
    :magneticmoment => "magnetic moment",
    :specificmagnetization => "specific magnetization",
    :polestrength => "pole strength",
    # Thermodynamic
    :temperature => "temperature",
    :entropy => "entropy",
    :specificentropy => "specific entropy",
    :volumeheatcapacity => "volume heat capacity",
    :thermalconductivity => "thermal conductivity",
    :thermalconductance => "thermal conductance",
    :thermalresistivity => "thermal resistivity",
    :thermalresistance => "thermal resistance",
    :thermalexpansion => "thermal expansion",
    :lapserate => "lapse rate",
    # Molar
    :molarmass => "molar mass",
    :molality => "molality",
    :molaramount => "molar amount",
    :molarity => "molarity",
    :molarvolume => "molar volume",
    :molarentropy => "molar entropy",
    :molarenergy => "molar energy",
    :molarconductivity => "molar conductivity",
    :molarsusceptibility => "molar susceptibility",
    :catalysis => "catalysis",
    :specificity => "specificity",
    :diffusionflux => "diffusion flux",
    # Photometric
    :luminousflux => "luminous flux",
    :luminousintensity => "luminous intensity",
    :luminance => "luminance",
    :illuminance => "illuminance",
    :luminousenergy => "luminous energy",
    :luminousexposure => "luminous exposure",
    :luminousefficacy => "luminous efficacy")
